{"version":3,"sources":["components/GeneralInfo.js","components/EducationalExperience.js","components/PracticalExperience.js","App.js","index.js"],"names":["showMenu","props","className","name","email","phone","onClick","changeEditState","GeneralInfo","state","edit","bind","changeValue","this","setState","prevState","console","log","event","target","id","value","propsEditMenu","propsShowMenu","htmlFor","type","onChange","React","Component","listOfEx","map","ex","index","schoolName","titleOfStudy","dateOfStudy","editMenu","listOfExForm","placeholder","handleChange","placeholer","addNewEx","EducationalExperience","keys","split","parseInt","temp","Object","assign","push","listOfPEx","companyName","positionTitle","mainTask","dateOfWork","addNewPracticalExperience","PracticalExperience","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e1108a2.chunk.js","sourcesContent":["import React from \"react\";\n\nconst showMenu = (props) => {\n    return(\n        <div className=\"generalInfoShow\">\n            <div className=\"GISitemInner\">Name: {props.name}</div>\n            <div className=\"GISitemInner\">Email: {props.email}</div>\n            <div className=\"GISitemInner\">Phone: {props.phone}</div>\n\n            <div className=\"line\"></div>\n\n            <button onClick={props.changeEditState}>Edit</button>\n        </div>\n    );\n};\n\nconst editMenu = (props) => {\n    return(\n        <div className=\"generalInfoEdit\">\n            <div className=\"GIEitem\">\n                <label htmlFor=\"name\">\n                    Name \n                    <input id=\"name\" name=\"name\" type=\"text\" onChange={props.changeValue} value={props.name}/>\n                </label>\n            </div>\n            <div>\n                <label htmlFor=\"email\">Email </label>\n                <input id=\"email\" name=\"email\" type=\"text\" onChange={props.changeValue} value={props.email}/>\n            </div>\n            <div className=\"GIEitem\">\n                <label htmlFor=\"phone\">Phone </label>\n                <input id=\"phone\" name=\"phone\" type=\"text\" onChange={props.changeValue} value={props.phone}/>\n            </div>\n\n            <div className=\"line\"></div>\n\n            <button onClick={props.changeEditState}>Done</button>\n        </div>\n    );\n};\n\nclass GeneralInfo extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            edit: false,\n            name: \"\",\n            email: \"\",\n            phone: \"\",\n        }\n\n        this.changeEditState = this.changeEditState.bind(this);\n        this.changeValue = this.changeValue.bind(this);\n    }\n\n    changeEditState(){\n        this.setState((prevState) => {\n            console.log(prevState.edit);\n            return {\n                edit: !prevState.edit\n            };\n        });\n    }\n\n    changeValue(event){\n        switch(event.target.id){\n            case \"name\":\n                this.setState({\n                    name: event.target.value\n                });\n                break;\n            case \"email\":\n                this.setState({\n                    email: event.target.value\n                });\n                break;\n            case \"phone\":\n                this.setState({\n                    phone: event.target.value\n                });\n                break;\n            default: break;\n        }\n    }\n\n    render(){\n        const propsEditMenu = {\n            ...this.state,\n            changeValue: this.changeValue,\n            changeEditState: this.changeEditState,\n        }\n\n        const propsShowMenu = {\n            ...this.state,\n            changeEditState: this.changeEditState,\n        }\n\n        return(\n            <section className=\"generalInfo\">\n                <div className=\"generalInfoTitle\">General information</div>\n                {this.state.edit ? editMenu(propsEditMenu) : showMenu(propsShowMenu)}\n            </section>\n        );\n    }\n}\n\nexport default GeneralInfo;","import React from \"react\";\n\nconst showMenu = (props) => {\n    let listOfEx = props.listOfEx.map((ex, index) => {\n        return (\n            <div className=\"experienceItem\" key={\"EI\" + index}>\n                <span>{ex.schoolName} - </span>\n                <span>{ex.titleOfStudy} - </span>\n                <span>{ex.dateOfStudy}</span>\n            </div>\n        );\n    });\n\n    return(\n        <div className=\"educationalExperienceShow\">\n            {listOfEx}\n            <div className=\"line\"></div>\n            <button onClick={props.changeEditState}>Edit</button>\n        </div>\n    );\n};\n\nconst editMenu = (props) => {\n    const listOfExForm = props.listOfEx.map((ex, index) => {\n        return(\n            <div className=\"experienceFormItem\" key={\"EFI\" + index}>\n                <input type=\"text\" placeholder=\"school name\" value={ex.schoolName} id={`schoolName-${index}`} onChange={props.handleChange} /> -  \n                <input type=\"text\" placeholder=\"title\" value={ex.titleOfStudy} id={`titleOfStudy-${index}`} onChange={props.handleChange} /> - \n                <input type=\"text\" placeholer=\"time of study\" value={ex.dateOfStudy} id={`dateOfStudy-${index}`} onChange={props.handleChange} />\n            </div>\n        );\n    });\n\n    return(\n        <div className=\"educationalExperienceEdit\">\n            {listOfExForm}\n            <div className=\"line\"></div>\n            <button onClick={props.addNewEx}>Add experience</button>\n            <button onClick={props.changeEditState}>Done</button>\n        </div>\n    );\n}\n\nclass EducationalExperience extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            edit: false,\n            listOfEx: [{\n                schoolName: \"\",\n                titleOfStudy: \"\",\n                dateOfStudy: \"\",\n            }],\n        }\n\n        this.changeEditState = this.changeEditState.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.addNewEx = this.addNewEx.bind(this);\n    }\n\n    changeEditState(){\n        this.setState((prevState) => {\n            return {\n                edit: !prevState.edit\n            };\n        });\n    }\n\n    handleChange(event){\n        const keys = event.target.id.split(\"-\");\n        const value = keys[0];\n        const index = parseInt(keys[1]);\n\n        this.setState((prevState) => {\n            let temp = prevState.listOfEx.map((value) => {\n                return Object.assign({}, value);\n            });\n\n            temp[index][value] = event.target.value;\n\n            return {\n                listOfEx: temp\n            }\n        });\n    }\n\n    addNewEx(){\n        this.setState((prevState) => {\n            let temp = prevState.listOfEx.map((value) => {\n                return Object.assign({}, value);\n            });\n\n            temp.push({\n                schoolName: \"\",\n                titleOfStudy: \"\",\n                dateOfStudy: \"\",\n            });\n\n            return {\n                listOfEx: temp\n            }\n        });\n    }\n\n    render(){\n        const propsEditMenu = {\n            ...this.state,\n            handleChange: this.handleChange,\n            changeEditState: this.changeEditState,\n            addNewEx: this.addNewEx,\n        }\n\n        const propsShowMenu = {\n            ...this.state,\n            changeEditState: this.changeEditState,\n        }\n\n        return(\n            <div className=\"educationalExperience\">\n                <div className=\"educationalExperienceTitle\">Education Experience</div>\n                {this.state.edit ? editMenu(propsEditMenu) : showMenu(propsShowMenu)}\n            </div>\n        );\n    }\n}\n\nexport default EducationalExperience;","import React from \"react\";\n\nconst showMenu = (props) => {\n    const listOfPEx = props.listOfPEx.map((ex, index) => {\n        return (\n            <div className=\"practicalExperienceShowItem\" key={\"PEx\" + index}>\n                <span>{ex.companyName} - </span>\n                <span>{ex.positionTitle} - </span>\n                <span>{ex.mainTask} - </span>\n                <span>{ex.dateOfWork}</span>\n            </div>\n        )\n    });\n\n    return(\n        <div className=\"practicalExperienceShow\">\n            {listOfPEx}\n            <div className=\"line\"></div>\n            <button onClick={props.changeEditState}>edit</button>\n        </div>\n    );\n}\n\nconst editMenu = (props) => {\n    const listOfPEx = props.listOfPEx.map((ex, index) => {\n        return (\n            <div className=\"practicalExperienceShowItem\" key={\"PEx\" + index}>\n                <input type=\"text\" placeholder=\"company name\" value={ex.companyName} id={\"companyName-\" + index} onChange={props.handleChange}/>\n                <input type=\"text\" placeholder=\"position title\" value={ex.positionTitle} id={\"positionTitle-\" + index} onChange={props.handleChange}/>\n                <input type=\"text\" placeholder=\"main task\" value={ex.mainTask} id={\"mainTask-\" + index} onChange={props.handleChange}/>\n                <input type=\"text\" placeholder=\"date of work\" value={ex.dateOfWork} id={\"dateOfWork-\" + index} onChange={props.handleChange}/>\n            </div>\n        )\n    });\n\n    return(\n        <div className=\"practicalExperienceEdit\">\n            {listOfPEx}\n            <div className=\"line\"></div>\n            <button onClick={props.addNewPracticalExperience}>add</button>\n            <button onClick={props.changeEditState}>done</button>\n        </div>\n    );\n}\n\nclass PracticalExperience extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state={\n            edit: false,\n            listOfPEx: [{\n                companyName: \"\",\n                positionTitle: \"\",\n                mainTask: \"\",\n                dateOfWork: \"\",\n            }],\n        }\n        \n        this.changeEditState = this.changeEditState.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.addNewPracticalExperience = this.addNewPracticalExperience.bind(this);\n    }\n\n    changeEditState(){\n        this.setState((prevState) => {\n            return {\n                edit: !prevState.edit\n            } \n        });\n    }\n\n    handleChange(event){\n        let keys = event.target.id.split(\"-\");\n        let value = keys[0];\n        let index = parseInt(keys[1]);\n\n        this.setState((prevState) => {\n            let temp = prevState.listOfPEx.map((value) => {\n                return Object.assign({}, value);\n            });\n\n            temp[index][value] = event.target.value;\n\n            return {\n                listOfPEx: temp\n            }\n        });\n    }\n\n    addNewPracticalExperience(){\n        this.setState((prevState) => {\n            let temp = prevState.listOfPEx.map((value) => {\n                return Object.assign({}, value);\n            });\n\n            temp.push({\n                companyName: \"\",\n                positionTitle: \"\",\n                mainTask: \"\",\n                dateOfWork: \"\",\n            });\n\n            return {\n                listOfPEx: temp\n            };\n        })\n    }\n\n    render(){\n        const propsEditMenu = {\n            ...this.state,\n            changeEditState: this.changeEditState,\n            handleChange: this.handleChange,\n            addNewPracticalExperience: this.addNewPracticalExperience\n        }\n\n        const propsShowMenu = {\n            ...this.state,\n            changeEditState: this.changeEditState\n        }\n\n        return(\n\n            <div className=\"practicalExperience\">\n                <div className=\"practicalExperienceTitle\">Practical Experiences</div>\n                {this.state.edit ? editMenu(propsEditMenu) : showMenu(propsShowMenu)}\n            </div>\n        );\n\n    }\n}\n\nexport default PracticalExperience;","import React from \"react\";\n\nimport GeneralInfo from \"./components/GeneralInfo\";\nimport EducationalExperience from \"./components/EducationalExperience\";\nimport PracticalExperience from \"./components/PracticalExperience\";\n\nclass App extends React.Component {\n  render(){\n    return (\n      <div className=\"App\">\n        <GeneralInfo />\n        <EducationalExperience />\n        <PracticalExperience />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}